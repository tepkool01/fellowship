name: Provision & Deploy

on:
  push:
    branches: [main]

jobs:
  provision-deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      working-directory: ./infra
      run: terraform init

    - name: Terraform Apply
      working-directory: ./infra
      run: terraform apply -auto-approve

    - name: Login to Amazon ECR
      run: |
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

    - name: Build Docker image
      run: docker build -t fellowship .

    - name: Tag & Push
      run: |
        docker tag fellowship:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPO_NAME }}:latest
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPO_NAME }}:latest

    - name: Deploy to EKS
      env:
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        ECR_REPO_NAME: ${{ secrets.ECR_REPO_NAME }}
        CERT_ARN: ${{ secrets.CERT_ARN }}
      run: |
        aws eks update-kubeconfig --name fellowship-cluster --region ${{ secrets.AWS_REGION }}
        envsubst < k8s/deployment.yaml | kubectl apply -f -
        kubectl apply -f k8s/service.yaml
        kubectl apply -f k8s/hpa.yaml
        envsubst < k8s/ingress.yaml | kubectl apply -f -
